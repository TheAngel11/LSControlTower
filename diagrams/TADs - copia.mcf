{"nodes":[{"center":{"x":768,"y":353},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":293,"width":120,"height":120},"holdName":true},{"center":{"x":734,"y":586},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":674,"y":526,"width":120,"height":120},"holdName":true},{"center":{"x":1432,"y":560},"type":"PERIPHERAL","name":"SIO","selected":false,"bounds":{"x":1415,"y":545,"width":35,"height":30},"holdName":true},{"center":{"x":1545,"y":188},"type":"PERIPHERAL","name":"VRY","selected":false,"bounds":{"x":1526,"y":173,"width":39,"height":30},"holdName":true},{"center":{"x":959,"y":648},"type":"PERIPHERAL","name":"Microphone","selected":false,"bounds":{"x":910,"y":633,"width":99,"height":30},"holdName":true},{"center":{"x":121,"y":696},"type":"PERIPHERAL","name":"Speaker","selected":false,"bounds":{"x":87,"y":681,"width":68,"height":30},"holdName":true},{"center":{"x":910,"y":45},"type":"PERIPHERAL","name":"COL[2..0]","selected":false,"bounds":{"x":870,"y":30,"width":80,"height":30},"holdName":true},{"center":{"x":1072,"y":54},"type":"PERIPHERAL","name":"ROW[3..0]","selected":false,"bounds":{"x":1028,"y":39,"width":88,"height":30},"holdName":true},{"center":{"x":601,"y":628},"type":"PERIPHERAL","name":"LCD[6..0]","selected":false,"bounds":{"x":562,"y":613,"width":79,"height":30},"holdName":true},{"center":{"x":670,"y":248},"type":"PERIPHERAL","name":"Timer0","selected":false,"bounds":{"x":640,"y":233,"width":61,"height":30},"holdName":true},{"center":{"x":1395,"y":442},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1335,"y":382,"width":120,"height":120},"holdName":true},{"center":{"x":1054,"y":784},"type":"TAD","name":"RecordList*","selected":false,"bounds":{"x":994,"y":724,"width":120,"height":120},"holdName":true},{"center":{"x":970,"y":135},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":910,"y":75,"width":120,"height":120},"holdName":true},{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},{"center":{"x":219,"y":524},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":159,"y":464,"width":120,"height":120},"holdName":true},{"center":{"x":512,"y":496},"type":"TAD","name":"Marquee*","selected":false,"bounds":{"x":452,"y":436,"width":120,"height":120},"holdName":true},{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},{"center":{"x":1234,"y":160},"type":"TAD","name":"Harbor*","selected":false,"bounds":{"x":1174,"y":100,"width":120,"height":120},"holdName":true},{"center":{"x":694,"y":160},"type":"TAD","name":"CurrentTime*","selected":false,"bounds":{"x":634,"y":100,"width":120,"height":120},"holdName":true},{"center":{"x":1070,"y":570},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1010,"y":510,"width":120,"height":120},"holdName":true},{"center":{"x":944,"y":836},"type":"PERIPHERAL","name":"EEPROM","selected":false,"bounds":{"x":907,"y":821,"width":74,"height":30},"holdName":true},{"center":{"x":1268,"y":632},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1208,"y":572,"width":120,"height":120},"holdName":true},{"center":{"x":366,"y":1249},"type":"TAD","name":"Name","selected":false,"bounds":{"x":306,"y":1189,"width":120,"height":120},"holdName":false},{"center":{"x":494,"y":1230},"type":"TAD","name":"Name","selected":false,"bounds":{"x":434,"y":1170,"width":120,"height":120},"holdName":false},{"center":{"x":588,"y":1203},"type":"TAD","name":"Name","selected":false,"bounds":{"x":528,"y":1143,"width":120,"height":120},"holdName":false},{"center":{"x":603,"y":1217},"type":"TAD","name":"Name","selected":false,"bounds":{"x":543,"y":1157,"width":120,"height":120},"holdName":false},{"center":{"x":648,"y":1308},"type":"TAD","name":"Name","selected":false,"bounds":{"x":588,"y":1248,"width":120,"height":120},"holdName":false},{"center":{"x":632,"y":1425},"type":"TAD","name":"Name","selected":false,"bounds":{"x":572,"y":1365,"width":120,"height":120},"holdName":false},{"center":{"x":650,"y":1530},"type":"TAD","name":"Name","selected":false,"bounds":{"x":590,"y":1470,"width":120,"height":120},"holdName":false},{"center":{"x":646,"y":1620},"type":"TAD","name":"Name","selected":false,"bounds":{"x":586,"y":1560,"width":120,"height":120},"holdName":false},{"center":{"x":639,"y":1695},"type":"TAD","name":"Name","selected":false,"bounds":{"x":579,"y":1635,"width":120,"height":120},"holdName":false},{"center":{"x":635,"y":1794},"type":"TAD","name":"Name","selected":false,"bounds":{"x":575,"y":1734,"width":120,"height":120},"holdName":false},{"center":{"x":634,"y":1902},"type":"TAD","name":"Name","selected":false,"bounds":{"x":574,"y":1842,"width":120,"height":120},"holdName":false},{"center":{"x":634,"y":2002},"type":"TAD","name":"Name","selected":false,"bounds":{"x":574,"y":1942,"width":120,"height":120},"holdName":false},{"center":{"x":634,"y":2102},"type":"TAD","name":"Name","selected":false,"bounds":{"x":574,"y":2042,"width":120,"height":120},"holdName":false},{"center":{"x":634,"y":2202},"type":"TAD","name":"Name","selected":false,"bounds":{"x":574,"y":2142,"width":120,"height":120},"holdName":false},{"center":{"x":630,"y":2300},"type":"TAD","name":"Name","selected":false,"bounds":{"x":570,"y":2240,"width":120,"height":120},"holdName":false},{"center":{"x":630,"y":2400},"type":"TAD","name":"Name","selected":false,"bounds":{"x":570,"y":2340,"width":120,"height":120},"holdName":false},{"center":{"x":630,"y":2500},"type":"TAD","name":"Name","selected":false,"bounds":{"x":570,"y":2440,"width":120,"height":120},"holdName":false}],"edges":[{"type":"INTERRUPT","n1":{"center":{"x":670,"y":248},"type":"PERIPHERAL","name":"Timer0","selected":false,"bounds":{"x":640,"y":233,"width":61,"height":30},"holdName":true},"n2":{"center":{"x":768,"y":353},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":293,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":643,"y":456},"type":"PERIPHERAL","name":"Timer0","selected":false,"bounds":{"x":613,"y":441,"width":61,"height":30},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":648,"y":321},"pivot":{"x":641,"y":314,"width":15,"height":15},"curve":{"x1":670.0,"y1":248.0,"ctrlx":648.0,"ctrly":321.0,"x2":768.0,"y2":353.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[711,694,701],"ypoints":[331,329,317]},"namePoint":{"x":683,"y":310},"nameBounds":{"x":654,"y":296,"width":58,"height":29},"name":"200us","selected":false,"bounds":{"x":648,"y":248,"width":120,"height":105},"holdName":true},{"type":"OPERATION","n1":{"center":{"x":734,"y":586},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":674,"y":526,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":601,"y":628},"type":"PERIPHERAL","name":"LCD[6..0]","selected":false,"bounds":{"x":562,"y":613,"width":79,"height":30},"holdName":true},"originalN1":{"center":{"x":1489,"y":440},"type":"PERIPHERAL","name":"LCD[6..0]","selected":false,"bounds":{"x":1450,"y":425,"width":79,"height":30},"holdName":true},"originalN2":{"center":{"x":1397,"y":331},"type":"TAD","name":"LCD","selected":false,"bounds":{"x":1337,"y":271,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":687,"y":657},"pivot":{"x":680,"y":650,"width":15,"height":15},"curve":{"x1":734.0,"y1":586.0,"ctrlx":687.0,"ctrly":657.0,"x2":601.0,"y2":628.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[641,657,652],"ypoints":[641,639,652]},"namePoint":{"x":677,"y":632},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":601,"y":586,"width":133,"height":71},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":1432,"y":560},"type":"PERIPHERAL","name":"SIO","selected":false,"bounds":{"x":1415,"y":545,"width":35,"height":30},"holdName":true},"n2":{"center":{"x":1395,"y":442},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1335,"y":382,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":619,"y":688},"type":"PERIPHERAL","name":"SIO","selected":false,"bounds":{"x":602,"y":673,"width":35,"height":30},"holdName":true},"originalN2":{"center":{"x":749,"y":581},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":689,"y":521,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1434,"y":515},"pivot":{"x":1427,"y":508,"width":15,"height":15},"curve":{"x1":1432.0,"y1":560.0,"ctrlx":1434.0,"ctrly":515.0,"x2":1395.0,"y2":442.0},"bidir":true,"arrow":{"npoints":3,"xpoints":[1423,1436,1424],"ypoints":[496,505,512]},"arrowBidir":{"npoints":3,"xpoints":[1432,1426,1440],"ypoints":[544,528,529]},"namePoint":{"x":1423,"y":508},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":1395,"y":442,"width":39,"height":118},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":1545,"y":188},"type":"PERIPHERAL","name":"VRY","selected":false,"bounds":{"x":1526,"y":173,"width":39,"height":30},"holdName":true},"n2":{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":239,"y":323},"type":"PERIPHERAL","name":"VRY","selected":false,"bounds":{"x":220,"y":308,"width":39,"height":30},"holdName":true},"originalN2":{"center":{"x":370,"y":271},"type":"TAD","name":"Joystick","selected":false,"bounds":{"x":310,"y":211,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1540,"y":257},"pivot":{"x":1533,"y":250,"width":15,"height":15},"curve":{"x1":1545.0,"y1":188.0,"ctrlx":1540.0,"ctrly":257.0,"x2":1548.0,"y2":339.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1542,1533,1547],"ypoints":[279,264,263]},"namePoint":{"x":1543,"y":260},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":1540,"y":188,"width":8,"height":151},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":910,"y":45},"type":"PERIPHERAL","name":"COL[2..0]","selected":false,"bounds":{"x":870,"y":30,"width":80,"height":30},"holdName":true},"n2":{"center":{"x":970,"y":135},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":910,"y":75,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":362,"y":576},"type":"PERIPHERAL","name":"COL[2..0]","selected":false,"bounds":{"x":322,"y":561,"width":80,"height":30},"holdName":true},"originalN2":{"center":{"x":462,"y":459},"type":"TAD","name":"Keypad","selected":true,"bounds":{"x":402,"y":399,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":902,"y":91},"pivot":{"x":895,"y":84,"width":15,"height":15},"curve":{"x1":910.0,"y1":45.0,"ctrlx":902.0,"ctrly":91.0,"x2":970.0,"y2":135.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[919,902,910],"ypoints":[102,99,87]},"namePoint":{"x":921,"y":90},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":902,"y":45,"width":68,"height":90},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":970,"y":135},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":910,"y":75,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1072,"y":54},"type":"PERIPHERAL","name":"ROW[3..0]","selected":false,"bounds":{"x":1028,"y":39,"width":88,"height":30},"holdName":true},"originalN1":{"center":{"x":501,"y":599},"type":"PERIPHERAL","name":"ROW[3..0]","selected":false,"bounds":{"x":457,"y":584,"width":88,"height":30},"holdName":true},"originalN2":{"center":{"x":462,"y":459},"type":"TAD","name":"Keypad","selected":true,"bounds":{"x":402,"y":399,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1057,"y":121},"pivot":{"x":1050,"y":114,"width":15,"height":15},"curve":{"x1":970.0,"y1":135.0,"ctrlx":1057.0,"ctrly":121.0,"x2":1072.0,"y2":54.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1068,1071,1058],"ypoints":[69,85,82]},"namePoint":{"x":1039,"y":107},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":970,"y":54,"width":102,"height":81},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":219,"y":524},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":159,"y":464,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":121,"y":696},"type":"PERIPHERAL","name":"Speaker","selected":false,"bounds":{"x":87,"y":681,"width":68,"height":30},"holdName":true},"originalN1":{"center":{"x":981,"y":716},"type":"PERIPHERAL","name":"Speaker","selected":false,"bounds":{"x":947,"y":701,"width":68,"height":30},"holdName":true},"originalN2":{"center":{"x":980,"y":564},"type":"TAD","name":"Melody","selected":false,"bounds":{"x":920,"y":504,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":138,"y":612},"pivot":{"x":131,"y":605,"width":15,"height":15},"curve":{"x1":219.0,"y1":524.0,"ctrlx":138.0,"ctrly":612.0,"x2":121.0,"y2":696.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[124,120,133],"ypoints":[680,663,666]},"namePoint":{"x":154,"y":611},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":121,"y":524,"width":98,"height":172},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":944,"y":836},"type":"PERIPHERAL","name":"EEPROM","selected":false,"bounds":{"x":907,"y":821,"width":74,"height":30},"holdName":true},"n2":{"center":{"x":1054,"y":784},"type":"TAD","name":"RecordList*","selected":false,"bounds":{"x":994,"y":724,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1697,"y":735},"type":"PERIPHERAL","name":"EEPROM","selected":false,"bounds":{"x":1660,"y":720,"width":74,"height":30},"holdName":true},"originalN2":{"center":{"x":1649,"y":596},"type":"TAD","name":"SaveRecord","selected":false,"bounds":{"x":1589,"y":536,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":942,"y":789},"pivot":{"x":935,"y":782,"width":15,"height":15},"curve":{"x1":944.0,"y1":836.0,"ctrlx":942.0,"ctrly":789.0,"x2":1054.0,"y2":784.0},"bidir":true,"arrow":{"npoints":3,"xpoints":[994,979,978],"ypoints":[786,793,779]},"arrowBidir":{"npoints":3,"xpoints":[943,935,949],"ypoints":[820,805,804]},"namePoint":{"x":970,"y":799},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":942,"y":784,"width":112,"height":52},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":959,"y":648},"type":"PERIPHERAL","name":"Microphone","selected":false,"bounds":{"x":910,"y":633,"width":99,"height":30},"holdName":true},"n2":{"center":{"x":1070,"y":570},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1010,"y":510,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1195,"y":229},"type":"PERIPHERAL","name":"Microphone","selected":false,"bounds":{"x":1146,"y":214,"width":99,"height":30},"holdName":true},"originalN2":{"center":{"x":1231,"y":118},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1171,"y":58,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":982,"y":618},"pivot":{"x":975,"y":611,"width":15,"height":15},"curve":{"x1":959.0,"y1":648.0,"ctrlx":982.0,"ctrly":618.0,"x2":1070.0,"y2":570.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1016,1006,999],"ypoints":[599,612,600]},"namePoint":{"x":998,"y":613},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":959,"y":570,"width":111,"height":78},"holdName":false},{"type":"INTERFACE","n1":{"center":{"x":694,"y":160},"type":"TAD","name":"CurrentTime*","selected":false,"bounds":{"x":634,"y":100,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":353},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":293,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":764,"y":130},"type":"TAD","name":"CurrentTime","selected":false,"bounds":{"x":704,"y":70,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":828,"y":243},"pivot":{"x":821,"y":236,"width":15,"height":15},"curve":{"x1":694.0,"y1":160.0,"ctrlx":828.0,"ctrly":243.0,"x2":768.0,"y2":353.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[786,779,793],"ypoints":[295,280,280]},"namePoint":{"x":779,"y":249},"nameBounds":{"x":759,"y":229,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":694,"y":160,"width":134,"height":193},"holdName":false},{"type":"INTERFACE","n1":{"center":{"x":970,"y":135},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":910,"y":75,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":353},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":293,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":462,"y":459},"type":"TAD","name":"Keypad","selected":true,"bounds":{"x":402,"y":399,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":854,"y":279},"pivot":{"x":847,"y":272,"width":15,"height":15},"curve":{"x1":970.0,"y1":135.0,"ctrlx":854.0,"ctrly":279.0,"x2":768.0,"y2":353.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[812,818,827],"ypoints":[311,295,306]},"namePoint":{"x":861,"y":261},"nameBounds":{"x":841,"y":241,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":768,"y":135,"width":202,"height":218},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":219,"y":524},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":159,"y":464,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":353},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":293,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":980,"y":564},"type":"TAD","name":"Melody","selected":false,"bounds":{"x":920,"y":504,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":496,"y":318},"pivot":{"x":489,"y":311,"width":15,"height":15},"curve":{"x1":219.0,"y1":524.0,"ctrlx":496.0,"ctrly":318.0,"x2":768.0,"y2":353.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[708,692,693],"ypoints":[348,354,340]},"namePoint":{"x":494,"y":378},"nameBounds":{"x":474,"y":358,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":219,"y":318,"width":549,"height":206},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":512,"y":496},"type":"TAD","name":"Marquee*","selected":false,"bounds":{"x":452,"y":436,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":353},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":293,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":541,"y":173},"type":"TAD","name":"Marquee","selected":false,"bounds":{"x":481,"y":113,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":670,"y":397},"pivot":{"x":663,"y":390,"width":15,"height":15},"curve":{"x1":512.0,"y1":496.0,"ctrlx":670.0,"ctrly":397.0,"x2":768.0,"y2":353.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[712,702,695],"ypoints":[379,392,380]},"namePoint":{"x":655,"y":410},"nameBounds":{"x":635,"y":390,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":512,"y":353,"width":256,"height":143},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":353},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":293,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1072,"y":421},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1012,"y":361,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":904,"y":435},"pivot":{"x":897,"y":428,"width":15,"height":15},"curve":{"x1":1074.0,"y1":373.0,"ctrlx":904.0,"ctrly":435.0,"x2":768.0,"y2":353.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[823,839,835],"ypoints":[380,378,391]},"namePoint":{"x":912,"y":399},"nameBounds":{"x":892,"y":379,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":768,"y":353,"width":306,"height":82},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1234,"y":160},"type":"TAD","name":"Harbor*","selected":false,"bounds":{"x":1174,"y":100,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":970,"y":135},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":910,"y":75,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1244,"y":173},"type":"TAD","name":"Port","selected":false,"bounds":{"x":1184,"y":113,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":969,"y":143},"type":"TAD","name":"Keypad","selected":false,"bounds":{"x":909,"y":83,"width":120,"height":120},"holdName":true},"functions":"char getKey(void);\n//Pre: -\n//Post: Returns the key that is being pressed, -1 if no key is pressed\n\nchar getKeyNum(void);\n//Pre: -\n//Post: Returns the index of the key that is being pressed, -1 if no key is pressed\n\nvoid resetIndexSMS(void);\n//Pre: -\n//Post: Equals to 0 in the indexSMS variable\n\n","pivotPoint":{"x":1097,"y":237},"pivot":{"x":1090,"y":230,"width":15,"height":15},"curve":{"x1":1234.0,"y1":160.0,"ctrlx":1097.0,"ctrly":237.0,"x2":970.0,"y2":135.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1021,1037,1031],"ypoints":[168,167,180]},"namePoint":{"x":1099,"y":192},"nameBounds":{"x":1079,"y":172,"width":40,"height":40},"name":"1","selected":false,"bounds":{"x":970,"y":135,"width":264,"height":102},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1234,"y":160},"type":"TAD","name":"Harbor*","selected":false,"bounds":{"x":1174,"y":100,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1244,"y":173},"type":"TAD","name":"Port","selected":false,"bounds":{"x":1184,"y":113,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1048,"y":416},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":988,"y":356,"width":120,"height":120},"holdName":true},"functions":"void showMainMenu(void);\n//Pre: -\n//Post: Shows the Main Menu through the LCD display\n\nvoid setTowerName(char* tower);\n//Pre: -\n//Post: Set the tower name of the harbor\n\nchar getTheEnd(void);\n//Pre: -\n//Post: Gets the_end variable to know if the port has been disconnected","pivotPoint":{"x":1115,"y":246},"pivot":{"x":1108,"y":239,"width":15,"height":15},"curve":{"x1":1234.0,"y1":160.0,"ctrlx":1115.0,"ctrly":246.0,"x2":1074.0,"y2":373.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1096,1097,1109],"ypoints":[317,300,307]},"namePoint":{"x":1134,"y":256},"nameBounds":{"x":1114,"y":236,"width":40,"height":40},"name":"5","selected":false,"bounds":{"x":1074,"y":160,"width":160,"height":213},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":970,"y":135},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":910,"y":75,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1048,"y":416},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":988,"y":356,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":969,"y":143},"type":"TAD","name":"Keypad","selected":false,"bounds":{"x":909,"y":83,"width":120,"height":120},"holdName":true},"functions":"char getKey(void);\n//Pre: -\n//Post: Returns the key that is being pressed, -1 if no key is pressed\n\nchar getKeyNum(void);\n//Pre: -\n//Post: Returns the index of the key that is being pressed, -1 if no key is pressed\n\nvoid resetIndexSMS(void);\n//Pre: -\n//Post: Equals to 0 in the indexSMS variable\n\n","pivotPoint":{"x":1025,"y":278},"pivot":{"x":1018,"y":271,"width":15,"height":15},"curve":{"x1":1074.0,"y1":373.0,"ctrlx":1025.0,"ctrly":278.0,"x2":970.0,"y2":135.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[992,1003,990],"ypoints":[191,202,207]},"namePoint":{"x":1023,"y":266},"nameBounds":{"x":1003,"y":246,"width":40,"height":40},"name":"1","selected":false,"bounds":{"x":970,"y":135,"width":104,"height":238},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":512,"y":496},"type":"TAD","name":"Marquee*","selected":false,"bounds":{"x":452,"y":436,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":734,"y":586},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":674,"y":526,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":580,"y":487},"type":"TAD","name":"Marquee","selected":false,"bounds":{"x":520,"y":427,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":751,"y":613},"type":"TAD","name":"LCD","selected":false,"bounds":{"x":691,"y":553,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":637,"y":525},"pivot":{"x":630,"y":518,"width":15,"height":15},"curve":{"x1":512.0,"y1":496.0,"ctrlx":637.0,"ctrly":525.0,"x2":734.0,"y2":586.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[682,665,671],"ypoints":[556,555,543]},"namePoint":{"x":630,"y":533},"nameBounds":{"x":610,"y":513,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":512,"y":496,"width":222,"height":90},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1070,"y":570},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1010,"y":510,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":375},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1014,"y":315,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1150,"y":607},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1090,"y":547,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1231,"y":451},"pivot":{"x":1224,"y":444,"width":15,"height":15},"curve":{"x1":1074.0,"y1":373.0,"ctrlx":1231.0,"ctrly":451.0,"x2":1070.0,"y2":570.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1115,1119,1130],"ypoints":[530,514,523]},"namePoint":{"x":1151,"y":461},"nameBounds":{"x":1131,"y":441,"width":40,"height":40},"name":"9","selected":false,"bounds":{"x":1070,"y":373,"width":161,"height":197},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":734,"y":586},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":674,"y":526,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":375},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1014,"y":315,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":756,"y":618},"type":"TAD","name":"LCD","selected":false,"bounds":{"x":696,"y":558,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":838,"y":539},"pivot":{"x":831,"y":532,"width":15,"height":15},"curve":{"x1":1074.0,"y1":373.0,"ctrlx":838.0,"ctrly":539.0,"x2":734.0,"y2":586.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[788,797,804],"ypoints":[558,544,556]},"namePoint":{"x":871,"y":509},"nameBounds":{"x":851,"y":489,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":734,"y":373,"width":340,"height":213},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":512,"y":496},"type":"TAD","name":"Marquee*","selected":false,"bounds":{"x":452,"y":436,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":375},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1014,"y":315,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":627,"y":452},"type":"TAD","name":"Marquee","selected":false,"bounds":{"x":567,"y":392,"width":120,"height":120},"holdName":true},"functions":"void activateMarquee(char OP);\n//Pre: - \n//Post: Enables and restarts the marquee\n\nvoid disableMarquee();\n//Pre: - \n//Post: Disables the marquee\n\n","pivotPoint":{"x":809,"y":520},"pivot":{"x":802,"y":513,"width":15,"height":15},"curve":{"x1":1074.0,"y1":373.0,"ctrlx":809.0,"ctrly":520.0,"x2":512.0,"y2":496.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[574,589,589],"ypoints":[499,492,506]},"namePoint":{"x":801,"y":477},"nameBounds":{"x":781,"y":457,"width":40,"height":40},"name":"3","selected":false,"bounds":{"x":512,"y":373,"width":562,"height":147},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1070,"y":570},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1010,"y":510,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":353},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":293,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1150,"y":607},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1090,"y":547,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":765,"y":350},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":705,"y":290,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":938,"y":518},"pivot":{"x":931,"y":511,"width":15,"height":15},"curve":{"x1":1070.0,"y1":570.0,"ctrlx":938.0,"ctrly":518.0,"x2":768.0,"y2":353.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[813,828,819],"ypoints":[395,400,410]},"namePoint":{"x":984,"y":529},"nameBounds":{"x":964,"y":509,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":768,"y":353,"width":302,"height":217},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":694,"y":160},"type":"TAD","name":"CurrentTime*","selected":false,"bounds":{"x":634,"y":100,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":375},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1014,"y":315,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":747,"y":104},"type":"TAD","name":"CurrentTime","selected":false,"bounds":{"x":687,"y":44,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":966,"y":217},"pivot":{"x":959,"y":210,"width":15,"height":15},"curve":{"x1":1074.0,"y1":373.0,"ctrlx":966.0,"ctrly":217.0,"x2":694.0,"y2":160.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[754,770,766],"ypoints":[174,171,184]},"namePoint":{"x":944,"y":250},"nameBounds":{"x":924,"y":230,"width":40,"height":40},"name":"10","selected":false,"bounds":{"x":694,"y":160,"width":380,"height":213},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1234,"y":160},"type":"TAD","name":"Harbor*","selected":false,"bounds":{"x":1174,"y":100,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":734,"y":586},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":674,"y":526,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1229,"y":129},"type":"TAD","name":"Harbor","selected":false,"bounds":{"x":1169,"y":69,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":719,"y":588},"type":"TAD","name":"LCD","selected":true,"bounds":{"x":659,"y":528,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":1037,"y":555},"pivot":{"x":1030,"y":548,"width":15,"height":15},"curve":{"x1":1234.0,"y1":160.0,"ctrlx":1037.0,"ctrly":555.0,"x2":734.0,"y2":586.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[796,808,812],"ypoints":[575,564,577]},"namePoint":{"x":1010,"y":464},"nameBounds":{"x":990,"y":444,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":734,"y":160,"width":500,"height":426},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1234,"y":160},"type":"TAD","name":"Harbor*","selected":false,"bounds":{"x":1174,"y":100,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1395,"y":442},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1335,"y":382,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1229,"y":129},"type":"TAD","name":"Harbor","selected":false,"bounds":{"x":1169,"y":69,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1372,"y":365},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1312,"y":305,"width":120,"height":120},"holdName":true},"functions":"char SiCharAvail(void);\n//Post: returns the number of available characters that are in the reception queue.\n//Retorna -1 if there are no available characters.\n\nchar SiGetChar(void);\n//Pre: SiCharAvail() returns a number greater than zero.\n//Post: returns and removes the first element from the reception queue.\n\nchar SiIsAvailable(void);\n//Post: returns 1 if the SIO module is available for sending.\n\nvoid SiSendChar(char c);\n//Pre: SiIsAvailable().\n//Post: starts sending the specified character.\n\n","pivotPoint":{"x":1374,"y":230},"pivot":{"x":1367,"y":223,"width":15,"height":15},"curve":{"x1":1234.0,"y1":160.0,"ctrlx":1374.0,"ctrly":230.0,"x2":1395.0,"y2":442.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1386,1375,1388],"ypoints":[381,368,364]},"namePoint":{"x":1344,"y":265},"nameBounds":{"x":1324,"y":245,"width":40,"height":40},"name":"6","selected":false,"bounds":{"x":1234,"y":160,"width":161,"height":282},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1268,"y":632},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1208,"y":572,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1395,"y":442},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1335,"y":382,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1293,"y":606},"type":"TAD","name":"PlayRecord","selected":false,"bounds":{"x":1233,"y":546,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1372,"y":365},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1312,"y":305,"width":120,"height":120},"holdName":true},"functions":"char SiCharAvail(void);\n//Post: returns the number of available characters that are in the reception queue.\n//Retorna -1 if there are no available characters.\n\nchar SiGetChar(void);\n//Pre: SiCharAvail() returns a number greater than zero.\n//Post: returns and removes the first element from the reception queue.\n\nchar SiIsAvailable(void);\n//Post: returns 1 if the SIO module is available for sending.\n\nvoid SiSendChar(char c);\n//Pre: SiIsAvailable().\n//Post: starts sending the specified character.\n\n","pivotPoint":{"x":1342,"y":483},"pivot":{"x":1335,"y":476,"width":15,"height":15},"curve":{"x1":1268.0,"y1":632.0,"ctrlx":1342.0,"ctrly":483.0,"x2":1395.0,"y2":442.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1353,1349,1338],"ypoints":[486,502,493]},"namePoint":{"x":1327,"y":532},"nameBounds":{"x":1307,"y":512,"width":40,"height":40},"name":"6","selected":false,"bounds":{"x":1268,"y":442,"width":127,"height":190},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1268,"y":632},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1208,"y":572,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1293,"y":606},"type":"TAD","name":"PlayRecord","selected":false,"bounds":{"x":1233,"y":546,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1270,"y":415},"pivot":{"x":1263,"y":408,"width":15,"height":15},"curve":{"x1":1074.0,"y1":373.0,"ctrlx":1270.0,"ctrly":415.0,"x2":1268.0,"y2":632.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1264,1254,1268],"ypoints":[572,558,556]},"namePoint":{"x":1220,"y":458},"nameBounds":{"x":1200,"y":438,"width":40,"height":40},"name":"4","selected":false,"bounds":{"x":1074,"y":373,"width":196,"height":259},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1070,"y":570},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1010,"y":510,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1395,"y":442},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1335,"y":382,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1072,"y":574},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1012,"y":514,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1372,"y":365},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1312,"y":305,"width":120,"height":120},"holdName":true},"functions":"char SiCharAvail(void);\n//Post: returns the number of available characters that are in the reception queue.\n//Retorna -1 if there are no available characters.\n\nchar SiGetChar(void);\n//Pre: SiCharAvail() returns a number greater than zero.\n//Post: returns and removes the first element from the reception queue.\n\nchar SiIsAvailable(void);\n//Post: returns 1 if the SIO module is available for sending.\n\nvoid SiSendChar(char c);\n//Pre: SiIsAvailable().\n//Post: starts sending the specified character.\n\n","pivotPoint":{"x":1159,"y":555},"pivot":{"x":1152,"y":548,"width":15,"height":15},"curve":{"x1":1070.0,"y1":570.0,"ctrlx":1159.0,"ctrly":555.0,"x2":1395.0,"y2":442.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1340,1329,1323],"ypoints":[467,479,467]},"namePoint":{"x":1195,"y":530},"nameBounds":{"x":1175,"y":510,"width":40,"height":40},"name":"6","selected":false,"bounds":{"x":1070,"y":442,"width":325,"height":128},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1070,"y":570},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1010,"y":510,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1054,"y":784},"type":"TAD","name":"RecordList*","selected":false,"bounds":{"x":994,"y":724,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1072,"y":574},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1012,"y":514,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1547,"y":761},"type":"TAD","name":"RecordList","selected":false,"bounds":{"x":1487,"y":701,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1106,"y":700},"pivot":{"x":1099,"y":693,"width":15,"height":15},"curve":{"x1":1070.0,"y1":570.0,"ctrlx":1106.0,"ctrly":700.0,"x2":1054.0,"y2":784.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1077,1073,1086],"ypoints":[728,711,714]},"namePoint":{"x":1086,"y":673},"nameBounds":{"x":1066,"y":653,"width":40,"height":40},"name":"7","selected":false,"bounds":{"x":1054,"y":570,"width":52,"height":214},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1268,"y":632},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1208,"y":572,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1054,"y":784},"type":"TAD","name":"RecordList*","selected":false,"bounds":{"x":994,"y":724,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1293,"y":606},"type":"TAD","name":"PlayRecord","selected":false,"bounds":{"x":1233,"y":546,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1547,"y":761},"type":"TAD","name":"RecordList","selected":false,"bounds":{"x":1487,"y":701,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1156,"y":709},"pivot":{"x":1149,"y":702,"width":15,"height":15},"curve":{"x1":1268.0,"y1":632.0,"ctrlx":1156.0,"ctrly":709.0,"x2":1054.0,"y2":784.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1103,1111,1119],"ypoints":[747,733,744]},"namePoint":{"x":1158,"y":708},"nameBounds":{"x":1138,"y":688,"width":40,"height":40},"name":"7","selected":false,"bounds":{"x":1054,"y":632,"width":214,"height":152},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":694,"y":160},"type":"TAD","name":"CurrentTime*","selected":false,"bounds":{"x":634,"y":100,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":734,"y":586},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":674,"y":526,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":742,"y":96},"type":"TAD","name":"CurrentTime","selected":false,"bounds":{"x":682,"y":36,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":719,"y":588},"type":"TAD","name":"LCD","selected":true,"bounds":{"x":659,"y":528,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":-3,"y":569},"pivot":{"x":-10,"y":562,"width":15,"height":15},"curve":{"x1":694.0,"y1":160.0,"ctrlx":-3.0,"ctrly":569.0,"x2":734.0,"y2":586.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[670,654,655],"ypoints":[583,589,575]},"namePoint":{"x":355,"y":471},"nameBounds":{"x":335,"y":451,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":-3,"y":160,"width":737,"height":426},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1070,"y":570},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1010,"y":510,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":219,"y":524},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":159,"y":464,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1072,"y":574},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1012,"y":514,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":265,"y":641},"type":"TAD","name":"Melody","selected":false,"bounds":{"x":205,"y":581,"width":120,"height":120},"holdName":true},"functions":"void playNote(char noteNum);\n//Pre: 0 \u003c\u003d noteNum \u003c\u003d 12\n//Post: Play a note 300ms\n\nvoid playMelody(void);\n//Pre: -\n//Post: Plays the full 8 seconds melody\n\n","pivotPoint":{"x":1007,"y":966},"pivot":{"x":1000,"y":959,"width":15,"height":15},"curve":{"x1":1070.0,"y1":570.0,"ctrlx":1007.0,"ctrly":966.0,"x2":219.0,"y2":524.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[273,289,282],"ypoints":[553,553,566]},"namePoint":{"x":825,"y":756},"nameBounds":{"x":805,"y":736,"width":40,"height":40},"name":"8","selected":false,"bounds":{"x":219,"y":524,"width":851,"height":442},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1268,"y":632},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1208,"y":572,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":219,"y":524},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":159,"y":464,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":283,"y":583},"type":"TAD","name":"Melody","selected":false,"bounds":{"x":223,"y":523,"width":120,"height":120},"holdName":true},"functions":"void playNote(char noteNum);\n//Pre: 0 \u003c\u003d noteNum \u003c\u003d 12\n//Post: Play a note 300ms\n\nvoid playMelody(void);\n//Pre: -\n//Post: Plays the full 8 seconds melody\n\n","pivotPoint":{"x":1058,"y":1598},"pivot":{"x":1051,"y":1591,"width":15,"height":15},"curve":{"x1":1268.0,"y1":632.0,"ctrlx":1058.0,"ctrly":1598.0,"x2":219.0,"y2":524.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[260,274,264],"ypoints":[576,583,592]},"namePoint":{"x":900,"y":1088},"nameBounds":{"x":880,"y":1068,"width":40,"height":40},"name":"8","selected":false,"bounds":{"x":219,"y":524,"width":1049,"height":1074},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1268,"y":632},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1208,"y":572,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":734,"y":586},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":674,"y":526,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":827,"y":1366},"pivot":{"x":820,"y":1359,"width":15,"height":15},"curve":{"x1":1268.0,"y1":632.0,"ctrlx":827.0,"ctrly":1366.0,"x2":734.0,"y2":586.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[743,752,738],"ypoints":[653,666,668]},"namePoint":{"x":914,"y":987},"nameBounds":{"x":894,"y":967,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":734,"y":586,"width":534,"height":780},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1070,"y":570},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1010,"y":510,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":734,"y":586},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":674,"y":526,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1072,"y":574},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1012,"y":514,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":877,"y":619},"pivot":{"x":870,"y":612,"width":15,"height":15},"curve":{"x1":1070.0,"y1":570.0,"ctrlx":877.0,"ctrly":619.0,"x2":734.0,"y2":586.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[794,809,808],"ypoints":[596,589,603]},"namePoint":{"x":889,"y":598},"nameBounds":{"x":869,"y":578,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":734,"y":570,"width":336,"height":49},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":734,"y":586},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":674,"y":526,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":353},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":293,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":765,"y":350},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":705,"y":290,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":672,"y":455},"pivot":{"x":665,"y":448,"width":15,"height":15},"curve":{"x1":734.0,"y1":586.0,"ctrlx":672.0,"ctrly":455.0,"x2":768.0,"y2":353.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[731,731,718],"ypoints":[402,418,412]},"namePoint":{"x":711,"y":462},"nameBounds":{"x":691,"y":442,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":672,"y":353,"width":96,"height":233},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":970,"y":135},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":910,"y":75,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":219,"y":524},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":159,"y":464,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":969,"y":142},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":909,"y":82,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":223,"y":596},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":163,"y":536,"width":120,"height":120},"holdName":true},"functions":"void playNote(char noteNum);\n//Pre: 0 \u003c\u003d noteNum \u003c\u003d 12\n//Post: Play a note 300ms\n\nvoid playMelody(void);\n//Pre: -\n//Post: Plays the full 8 seconds melody\n\n","pivotPoint":{"x":374,"y":-95},"pivot":{"x":367,"y":-102,"width":15,"height":15},"curve":{"x1":970.0,"y1":135.0,"ctrlx":374.0,"ctrly":-95.0,"x2":219.0,"y2":524.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[235,233,246],"ypoints":[464,447,452]},"namePoint":{"x":484,"y":117},"nameBounds":{"x":464,"y":97,"width":40,"height":40},"name":"8","selected":false,"bounds":{"x":219,"y":-95,"width":751,"height":619},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1544,"y":305},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1484,"y":245,"width":120,"height":120},"holdName":true},"functions":"char getGoDown(void);\n//Pre: -\n//Post: Returns 1 if the screen needs to go down \n//(AND PUTS 0 THE VARIABLE), 0 if not\n\nchar getGoUp(void);\n//Pre: -\n//Post: Returns 1 if the screen needs to go up \n//(AND PUTS 0 THE VARIABLE), 0 if not\n\nvoid resetMoves(void);\n//Pre: -\n//Post: Puts 0 in go_up and go_down variables \n\n\n\n\n\n\n\n","pivotPoint":{"x":1285,"y":235},"pivot":{"x":1278,"y":228,"width":15,"height":15},"curve":{"x1":1074.0,"y1":373.0,"ctrlx":1285.0,"ctrly":235.0,"x2":1548.0,"y2":339.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1490,1473,1477],"ypoints":[319,321,307]},"namePoint":{"x":1298,"y":294},"nameBounds":{"x":1278,"y":274,"width":40,"height":40},"name":"11","selected":false,"bounds":{"x":1074,"y":235,"width":474,"height":138},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1268,"y":632},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1208,"y":572,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1544,"y":305},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1484,"y":245,"width":120,"height":120},"holdName":true},"functions":"char getGoDown(void);\n//Pre: -\n//Post: Returns 1 if the screen needs to go down \n//(AND PUTS 0 THE VARIABLE), 0 if not\n\nchar getGoUp(void);\n//Pre: -\n//Post: Returns 1 if the screen needs to go up \n//(AND PUTS 0 THE VARIABLE), 0 if not\n\nvoid resetMoves(void);\n//Pre: -\n//Post: Puts 0 in go_up and go_down variables \n\n\n\n\n\n\n\n","pivotPoint":{"x":1666,"y":636},"pivot":{"x":1659,"y":629,"width":15,"height":15},"curve":{"x1":1268.0,"y1":632.0,"ctrlx":1666.0,"ctrly":636.0,"x2":1548.0,"y2":339.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1567,1576,1563],"ypoints":[398,411,414]},"namePoint":{"x":1537,"y":560},"nameBounds":{"x":1517,"y":540,"width":40,"height":40},"name":"11","selected":false,"bounds":{"x":1268,"y":339,"width":398,"height":297},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1070,"y":570},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1010,"y":510,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1070,"y":570},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1010,"y":510,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},"functions":"void disableJoystick(void);\n//Pre: -\n//Post: Disables the joystick flow and changes to CH\u003d1\n\nvoid enableJoystick(void);\n//Pre: -\n//Post: Enables the joystick flow and changes to CH\u003d0\n","pivotPoint":{"x":1100,"y":324},"pivot":{"x":1093,"y":317,"width":15,"height":15},"curve":{"x1":1070.0,"y1":570.0,"ctrlx":1100.0,"ctrly":324.0,"x2":1548.0,"y2":339.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1487,1472,1471],"ypoints":[338,345,331]},"namePoint":{"x":1229,"y":379},"nameBounds":{"x":1209,"y":359,"width":40,"height":40},"name":"12","selected":false,"bounds":{"x":1070,"y":324,"width":478,"height":246},"holdName":false}],"actions":[],"stateCount":0,"interfaceCount":13}