{"nodes":[{"center":{"x":768,"y":355},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":295,"width":120,"height":120},"holdName":true},{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},{"center":{"x":1451,"y":486},"type":"PERIPHERAL","name":"SIO","selected":false,"bounds":{"x":1434,"y":471,"width":35,"height":30},"holdName":true},{"center":{"x":1545,"y":188},"type":"PERIPHERAL","name":"VRY","selected":false,"bounds":{"x":1526,"y":173,"width":39,"height":30},"holdName":true},{"center":{"x":958,"y":643},"type":"PERIPHERAL","name":"Microphone","selected":false,"bounds":{"x":909,"y":628,"width":99,"height":30},"holdName":true},{"center":{"x":121,"y":696},"type":"PERIPHERAL","name":"Speaker","selected":false,"bounds":{"x":87,"y":681,"width":68,"height":30},"holdName":true},{"center":{"x":910,"y":45},"type":"PERIPHERAL","name":"COL[2..0]","selected":false,"bounds":{"x":870,"y":30,"width":80,"height":30},"holdName":true},{"center":{"x":1072,"y":54},"type":"PERIPHERAL","name":"ROW[3..0]","selected":false,"bounds":{"x":1028,"y":39,"width":88,"height":30},"holdName":true},{"center":{"x":601,"y":628},"type":"PERIPHERAL","name":"LCD[6..0]","selected":false,"bounds":{"x":562,"y":613,"width":79,"height":30},"holdName":true},{"center":{"x":670,"y":248},"type":"PERIPHERAL","name":"Timer0","selected":false,"bounds":{"x":640,"y":233,"width":61,"height":30},"holdName":true},{"center":{"x":1386,"y":372},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1326,"y":312,"width":120,"height":120},"holdName":true},{"center":{"x":1551,"y":776},"type":"TAD","name":"RecordList*","selected":false,"bounds":{"x":1491,"y":716,"width":120,"height":120},"holdName":true},{"center":{"x":965,"y":127},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":905,"y":67,"width":120,"height":120},"holdName":true},{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},{"center":{"x":223,"y":596},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":163,"y":536,"width":120,"height":120},"holdName":true},{"center":{"x":527,"y":480},"type":"TAD","name":"Marquee*","selected":false,"bounds":{"x":467,"y":420,"width":120,"height":120},"holdName":true},{"center":{"x":1063,"y":359},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1003,"y":299,"width":120,"height":120},"holdName":true},{"center":{"x":1228,"y":114},"type":"TAD","name":"Harbor*","selected":false,"bounds":{"x":1168,"y":54,"width":120,"height":120},"holdName":true},{"center":{"x":712,"y":150},"type":"TAD","name":"CurrentTime*","selected":false,"bounds":{"x":652,"y":90,"width":120,"height":120},"holdName":true},{"center":{"x":1063,"y":569},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1003,"y":509,"width":120,"height":120},"holdName":true},{"center":{"x":1717,"y":768},"type":"PERIPHERAL","name":"EEPROM","selected":false,"bounds":{"x":1680,"y":753,"width":74,"height":30},"holdName":true},{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true}],"edges":[{"type":"INTERRUPT","n1":{"center":{"x":670,"y":248},"type":"PERIPHERAL","name":"Timer0","selected":false,"bounds":{"x":640,"y":233,"width":61,"height":30},"holdName":true},"n2":{"center":{"x":768,"y":355},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":295,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":643,"y":456},"type":"PERIPHERAL","name":"Timer0","selected":false,"bounds":{"x":613,"y":441,"width":61,"height":30},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":648,"y":321},"pivot":{"x":641,"y":314,"width":15,"height":15},"curve":{"x1":670.0,"y1":248.0,"ctrlx":648.0,"ctrly":321.0,"x2":768.0,"y2":355.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[712,695,702],"ypoints":[333,330,319]},"namePoint":{"x":683,"y":311},"nameBounds":{"x":654,"y":297,"width":58,"height":29},"name":"200us","selected":false,"bounds":{"x":648,"y":248,"width":120,"height":107},"holdName":true},{"type":"OPERATION","n1":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":601,"y":628},"type":"PERIPHERAL","name":"LCD[6..0]","selected":false,"bounds":{"x":562,"y":613,"width":79,"height":30},"holdName":true},"originalN1":{"center":{"x":1489,"y":440},"type":"PERIPHERAL","name":"LCD[6..0]","selected":false,"bounds":{"x":1450,"y":425,"width":79,"height":30},"holdName":true},"originalN2":{"center":{"x":1397,"y":331},"type":"TAD","name":"LCD","selected":false,"bounds":{"x":1337,"y":271,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":687,"y":657},"pivot":{"x":680,"y":650,"width":15,"height":15},"curve":{"x1":718.0,"y1":588.0,"ctrlx":687.0,"ctrly":657.0,"x2":601.0,"y2":628.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[641,657,652],"ypoints":[641,639,652]},"namePoint":{"x":673,"y":632},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":601,"y":588,"width":117,"height":69},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":1451,"y":486},"type":"PERIPHERAL","name":"SIO","selected":false,"bounds":{"x":1434,"y":471,"width":35,"height":30},"holdName":true},"n2":{"center":{"x":1386,"y":372},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1326,"y":312,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":619,"y":688},"type":"PERIPHERAL","name":"SIO","selected":false,"bounds":{"x":602,"y":673,"width":35,"height":30},"holdName":true},"originalN2":{"center":{"x":749,"y":581},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":689,"y":521,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1444,"y":462},"pivot":{"x":1437,"y":455,"width":15,"height":15},"curve":{"x1":1451.0,"y1":486.0,"ctrlx":1444.0,"ctrly":462.0,"x2":1386.0,"y2":372.0},"bidir":true,"arrow":{"npoints":3,"xpoints":[1419,1432,1421],"ypoints":[423,431,439]},"arrowBidir":{"npoints":3,"xpoints":[1446,1435,1449],"ypoints":[470,457,453]},"namePoint":{"x":1431,"y":445},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":1386,"y":372,"width":65,"height":114},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":1545,"y":188},"type":"PERIPHERAL","name":"VRY","selected":false,"bounds":{"x":1526,"y":173,"width":39,"height":30},"holdName":true},"n2":{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":239,"y":323},"type":"PERIPHERAL","name":"VRY","selected":false,"bounds":{"x":220,"y":308,"width":39,"height":30},"holdName":true},"originalN2":{"center":{"x":370,"y":271},"type":"TAD","name":"Joystick","selected":false,"bounds":{"x":310,"y":211,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1540,"y":257},"pivot":{"x":1533,"y":250,"width":15,"height":15},"curve":{"x1":1545.0,"y1":188.0,"ctrlx":1540.0,"ctrly":257.0,"x2":1548.0,"y2":339.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1542,1533,1547],"ypoints":[279,264,263]},"namePoint":{"x":1543,"y":260},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":1540,"y":188,"width":8,"height":151},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":910,"y":45},"type":"PERIPHERAL","name":"COL[2..0]","selected":false,"bounds":{"x":870,"y":30,"width":80,"height":30},"holdName":true},"n2":{"center":{"x":965,"y":127},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":905,"y":67,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":362,"y":576},"type":"PERIPHERAL","name":"COL[2..0]","selected":false,"bounds":{"x":322,"y":561,"width":80,"height":30},"holdName":true},"originalN2":{"center":{"x":462,"y":459},"type":"TAD","name":"Keypad","selected":true,"bounds":{"x":402,"y":399,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":902,"y":91},"pivot":{"x":895,"y":84,"width":15,"height":15},"curve":{"x1":910.0,"y1":45.0,"ctrlx":902.0,"ctrly":91.0,"x2":965.0,"y2":127.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[913,896,903],"ypoints":[97,95,83]},"namePoint":{"x":919,"y":88},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":902,"y":45,"width":63,"height":82},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":965,"y":127},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":905,"y":67,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1072,"y":54},"type":"PERIPHERAL","name":"ROW[3..0]","selected":false,"bounds":{"x":1028,"y":39,"width":88,"height":30},"holdName":true},"originalN1":{"center":{"x":501,"y":599},"type":"PERIPHERAL","name":"ROW[3..0]","selected":false,"bounds":{"x":457,"y":584,"width":88,"height":30},"holdName":true},"originalN2":{"center":{"x":462,"y":459},"type":"TAD","name":"Keypad","selected":true,"bounds":{"x":402,"y":399,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1057,"y":121},"pivot":{"x":1050,"y":114,"width":15,"height":15},"curve":{"x1":965.0,"y1":127.0,"ctrlx":1057.0,"ctrly":121.0,"x2":1072.0,"y2":54.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1068,1071,1058],"ypoints":[69,85,82]},"namePoint":{"x":1037,"y":105},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":965,"y":54,"width":107,"height":73},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":223,"y":596},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":163,"y":536,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":121,"y":696},"type":"PERIPHERAL","name":"Speaker","selected":false,"bounds":{"x":87,"y":681,"width":68,"height":30},"holdName":true},"originalN1":{"center":{"x":981,"y":716},"type":"PERIPHERAL","name":"Speaker","selected":false,"bounds":{"x":947,"y":701,"width":68,"height":30},"holdName":true},"originalN2":{"center":{"x":980,"y":564},"type":"TAD","name":"Melody","selected":false,"bounds":{"x":920,"y":504,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":138,"y":612},"pivot":{"x":131,"y":605,"width":15,"height":15},"curve":{"x1":223.0,"y1":596.0,"ctrlx":138.0,"ctrly":612.0,"x2":121.0,"y2":696.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[124,120,133],"ypoints":[680,663,666]},"namePoint":{"x":155,"y":629},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":121,"y":596,"width":102,"height":100},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":1717,"y":768},"type":"PERIPHERAL","name":"EEPROM","selected":false,"bounds":{"x":1680,"y":753,"width":74,"height":30},"holdName":true},"n2":{"center":{"x":1551,"y":776},"type":"TAD","name":"RecordList*","selected":false,"bounds":{"x":1491,"y":716,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1697,"y":735},"type":"PERIPHERAL","name":"EEPROM","selected":false,"bounds":{"x":1660,"y":720,"width":74,"height":30},"holdName":true},"originalN2":{"center":{"x":1649,"y":596},"type":"TAD","name":"SaveRecord","selected":false,"bounds":{"x":1589,"y":536,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1642,"y":769},"pivot":{"x":1635,"y":762,"width":15,"height":15},"curve":{"x1":1717.0,"y1":768.0,"ctrlx":1642.0,"ctrly":769.0,"x2":1551.0,"y2":776.0},"bidir":true,"arrow":{"npoints":3,"xpoints":[1611,1625,1626],"ypoints":[771,763,777]},"arrowBidir":{"npoints":3,"xpoints":[1679,1664,1663],"ypoints":[768,775,761]},"namePoint":{"x":1638,"y":770},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":1551,"y":768,"width":166,"height":8},"holdName":false},{"type":"OPERATION","n1":{"center":{"x":958,"y":643},"type":"PERIPHERAL","name":"Microphone","selected":false,"bounds":{"x":909,"y":628,"width":99,"height":30},"holdName":true},"n2":{"center":{"x":1063,"y":569},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1003,"y":509,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1195,"y":229},"type":"PERIPHERAL","name":"Microphone","selected":false,"bounds":{"x":1146,"y":214,"width":99,"height":30},"holdName":true},"originalN2":{"center":{"x":1231,"y":118},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1171,"y":58,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":975,"y":616},"pivot":{"x":968,"y":609,"width":15,"height":15},"curve":{"x1":958.0,"y1":643.0,"ctrlx":975.0,"ctrly":616.0,"x2":1063.0,"y2":569.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1009,999,992],"ypoints":[597,610,598]},"namePoint":{"x":992,"y":611},"nameBounds":{"x":0,"y":0,"width":0,"height":0},"selected":false,"bounds":{"x":958,"y":569,"width":105,"height":74},"holdName":false},{"type":"INTERFACE","n1":{"center":{"x":712,"y":150},"type":"TAD","name":"CurrentTime*","selected":false,"bounds":{"x":652,"y":90,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":355},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":295,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":764,"y":130},"type":"TAD","name":"CurrentTime","selected":false,"bounds":{"x":704,"y":70,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":828,"y":243},"pivot":{"x":821,"y":236,"width":15,"height":15},"curve":{"x1":712.0,"y1":150.0,"ctrlx":828.0,"ctrly":243.0,"x2":768.0,"y2":355.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[787,781,795],"ypoints":[298,282,283]},"namePoint":{"x":784,"y":247},"nameBounds":{"x":764,"y":227,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":712,"y":150,"width":116,"height":205},"holdName":false},{"type":"INTERFACE","n1":{"center":{"x":965,"y":127},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":905,"y":67,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":355},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":295,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":462,"y":459},"type":"TAD","name":"Keypad","selected":true,"bounds":{"x":402,"y":399,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":854,"y":279},"pivot":{"x":847,"y":272,"width":15,"height":15},"curve":{"x1":965.0,"y1":127.0,"ctrlx":854.0,"ctrly":279.0,"x2":768.0,"y2":355.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[811,815,826],"ypoints":[313,297,306]},"namePoint":{"x":860,"y":260},"nameBounds":{"x":840,"y":240,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":768,"y":127,"width":197,"height":228},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":223,"y":596},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":163,"y":536,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":355},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":295,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":980,"y":564},"type":"TAD","name":"Melody","selected":false,"bounds":{"x":920,"y":504,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":496,"y":318},"pivot":{"x":489,"y":311,"width":15,"height":15},"curve":{"x1":223.0,"y1":596.0,"ctrlx":496.0,"ctrly":318.0,"x2":768.0,"y2":355.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[708,693,692],"ypoints":[350,357,343]},"namePoint":{"x":495,"y":396},"nameBounds":{"x":475,"y":376,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":223,"y":318,"width":545,"height":278},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":527,"y":480},"type":"TAD","name":"Marquee*","selected":false,"bounds":{"x":467,"y":420,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":355},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":295,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":541,"y":173},"type":"TAD","name":"Marquee","selected":false,"bounds":{"x":481,"y":113,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":670,"y":397},"pivot":{"x":663,"y":390,"width":15,"height":15},"curve":{"x1":527.0,"y1":480.0,"ctrlx":670.0,"ctrly":397.0,"x2":768.0,"y2":355.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[713,702,696],"ypoints":[379,391,378]},"namePoint":{"x":658,"y":407},"nameBounds":{"x":638,"y":387,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":527,"y":355,"width":241,"height":125},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":359},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1003,"y":299,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":355},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":295,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1072,"y":421},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1012,"y":361,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":763,"y":356},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":703,"y":296,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":910,"y":366},"pivot":{"x":903,"y":359,"width":15,"height":15},"curve":{"x1":1063.0,"y1":359.0,"ctrlx":910.0,"ctrly":366.0,"x2":768.0,"y2":355.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[828,843,842],"ypoints":[358,352,366]},"namePoint":{"x":912,"y":361},"nameBounds":{"x":892,"y":341,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":768,"y":355,"width":295,"height":11},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1228,"y":114},"type":"TAD","name":"Harbor*","selected":false,"bounds":{"x":1168,"y":54,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":965,"y":127},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":905,"y":67,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1244,"y":173},"type":"TAD","name":"Port","selected":false,"bounds":{"x":1184,"y":113,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":969,"y":143},"type":"TAD","name":"Keypad","selected":false,"bounds":{"x":909,"y":83,"width":120,"height":120},"holdName":true},"functions":"char getKey(void);\n//Pre: -\n//Post: Returns the key that is being pressed, -1 if no key is pressed\n\nchar getKeyNum(void);\n//Pre: -\n//Post: Returns the index of the key that is being pressed, -1 if no key is pressed\n\nvoid resetIndexSMS(void);\n//Pre: -\n//Post: Equals to 0 in the indexSMS variable\n\n","pivotPoint":{"x":1097,"y":237},"pivot":{"x":1090,"y":230,"width":15,"height":15},"curve":{"x1":1228.0,"y1":114.0,"ctrlx":1097.0,"ctrly":237.0,"x2":965.0,"y2":127.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1016,1032,1027],"ypoints":[161,159,172]},"namePoint":{"x":1096,"y":178},"nameBounds":{"x":1076,"y":158,"width":40,"height":40},"name":"1","selected":false,"bounds":{"x":965,"y":114,"width":263,"height":123},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1228,"y":114},"type":"TAD","name":"Harbor*","selected":false,"bounds":{"x":1168,"y":54,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1063,"y":359},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1003,"y":299,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1244,"y":173},"type":"TAD","name":"Port","selected":false,"bounds":{"x":1184,"y":113,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1048,"y":416},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":988,"y":356,"width":120,"height":120},"holdName":true},"functions":"void showMainMenu(void);\n//Pre: -\n//Post: Shows the Main Menu through the LCD display\n\nvoid setTowerName(char* tower);\n//Pre: -\n//Post: Set the tower name of the harbor\n\nchar getTheEnd(void);\n//Pre: -\n//Post: Gets the_end variable to know if the port has been disconnected","pivotPoint":{"x":1128,"y":256},"pivot":{"x":1121,"y":249,"width":15,"height":15},"curve":{"x1":1228.0,"y1":114.0,"ctrlx":1128.0,"ctrly":256.0,"x2":1063.0,"y2":359.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1095,1097,1108],"ypoints":[308,291,299]},"namePoint":{"x":1136,"y":246},"nameBounds":{"x":1116,"y":226,"width":40,"height":40},"name":"5","selected":false,"bounds":{"x":1063,"y":114,"width":165,"height":245},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":359},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1003,"y":299,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":965,"y":127},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":905,"y":67,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1048,"y":416},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":988,"y":356,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":969,"y":143},"type":"TAD","name":"Keypad","selected":false,"bounds":{"x":909,"y":83,"width":120,"height":120},"holdName":true},"functions":"char getKey(void);\n//Pre: -\n//Post: Returns the key that is being pressed, -1 if no key is pressed\n\nchar getKeyNum(void);\n//Pre: -\n//Post: Returns the index of the key that is being pressed, -1 if no key is pressed\n\nvoid resetIndexSMS(void);\n//Pre: -\n//Post: Equals to 0 in the indexSMS variable\n\n","pivotPoint":{"x":1016,"y":264},"pivot":{"x":1009,"y":257,"width":15,"height":15},"curve":{"x1":1063.0,"y1":359.0,"ctrlx":1016.0,"ctrly":264.0,"x2":965.0,"y2":127.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[987,999,986],"ypoints":[185,196,201]},"namePoint":{"x":1015,"y":253},"nameBounds":{"x":995,"y":233,"width":40,"height":40},"name":"1","selected":false,"bounds":{"x":965,"y":127,"width":98,"height":232},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":527,"y":480},"type":"TAD","name":"Marquee*","selected":false,"bounds":{"x":467,"y":420,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":580,"y":487},"type":"TAD","name":"Marquee","selected":false,"bounds":{"x":520,"y":427,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":751,"y":613},"type":"TAD","name":"LCD","selected":false,"bounds":{"x":691,"y":553,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":637,"y":525},"pivot":{"x":630,"y":518,"width":15,"height":15},"curve":{"x1":527.0,"y1":480.0,"ctrlx":637.0,"ctrly":525.0,"x2":718.0,"y2":588.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[669,652,660],"ypoints":[553,550,538]},"namePoint":{"x":629,"y":529},"nameBounds":{"x":609,"y":509,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":527,"y":480,"width":191,"height":108},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":359},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1003,"y":299,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1063,"y":569},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1003,"y":509,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":375},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1014,"y":315,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1150,"y":607},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1090,"y":547,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1231,"y":451},"pivot":{"x":1224,"y":444,"width":15,"height":15},"curve":{"x1":1063.0,"y1":359.0,"ctrlx":1231.0,"ctrly":451.0,"x2":1063.0,"y2":569.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1109,1113,1124],"ypoints":[530,514,523]},"namePoint":{"x":1147,"y":457},"nameBounds":{"x":1127,"y":437,"width":40,"height":40},"name":"9","selected":false,"bounds":{"x":1063,"y":359,"width":168,"height":210},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":359},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1003,"y":299,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":375},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1014,"y":315,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":756,"y":618},"type":"TAD","name":"LCD","selected":false,"bounds":{"x":696,"y":558,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":838,"y":539},"pivot":{"x":831,"y":532,"width":15,"height":15},"curve":{"x1":1063.0,"y1":359.0,"ctrlx":838.0,"ctrly":539.0,"x2":718.0,"y2":588.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[773,782,789],"ypoints":[561,547,559]},"namePoint":{"x":864,"y":506},"nameBounds":{"x":844,"y":486,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":718,"y":359,"width":345,"height":229},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":359},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1003,"y":299,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":527,"y":480},"type":"TAD","name":"Marquee*","selected":false,"bounds":{"x":467,"y":420,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":375},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1014,"y":315,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":627,"y":452},"type":"TAD","name":"Marquee","selected":false,"bounds":{"x":567,"y":392,"width":120,"height":120},"holdName":true},"functions":"void activateMarquee(char OP);\n//Pre: - \n//Post: Enables and restarts the marquee\n\nvoid disableMarquee();\n//Pre: - \n//Post: Disables the marquee\n\n","pivotPoint":{"x":785,"y":489},"pivot":{"x":778,"y":482,"width":15,"height":15},"curve":{"x1":1063.0,"y1":359.0,"ctrlx":785.0,"ctrly":489.0,"x2":527.0,"y2":480.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[589,603,604],"ypoints":[480,472,486]},"namePoint":{"x":790,"y":454},"nameBounds":{"x":770,"y":434,"width":40,"height":40},"name":"3","selected":false,"bounds":{"x":527,"y":359,"width":536,"height":130},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":569},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1003,"y":509,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":355},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":295,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1150,"y":607},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1090,"y":547,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":765,"y":350},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":705,"y":290,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":880,"y":516},"pivot":{"x":873,"y":509,"width":15,"height":15},"curve":{"x1":1063.0,"y1":569.0,"ctrlx":880.0,"ctrly":516.0,"x2":768.0,"y2":355.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[805,820,810],"ypoints":[403,409,418]},"namePoint":{"x":933,"y":513},"nameBounds":{"x":913,"y":493,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":768,"y":355,"width":295,"height":214},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":359},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1003,"y":299,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":712,"y":150},"type":"TAD","name":"CurrentTime*","selected":false,"bounds":{"x":652,"y":90,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":375},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1014,"y":315,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":747,"y":104},"type":"TAD","name":"CurrentTime","selected":false,"bounds":{"x":687,"y":44,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":960,"y":236},"pivot":{"x":953,"y":229,"width":15,"height":15},"curve":{"x1":1063.0,"y1":359.0,"ctrlx":960.0,"ctrly":236.0,"x2":712.0,"y2":150.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[769,785,780],"ypoints":[171,169,182]},"namePoint":{"x":923,"y":245},"nameBounds":{"x":903,"y":225,"width":40,"height":40},"name":"10","selected":false,"bounds":{"x":712,"y":150,"width":351,"height":209},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1228,"y":114},"type":"TAD","name":"Harbor*","selected":false,"bounds":{"x":1168,"y":54,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1229,"y":129},"type":"TAD","name":"Harbor","selected":false,"bounds":{"x":1169,"y":69,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":719,"y":588},"type":"TAD","name":"LCD","selected":true,"bounds":{"x":659,"y":528,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":1106,"y":596},"pivot":{"x":1099,"y":589,"width":15,"height":15},"curve":{"x1":1228.0,"y1":114.0,"ctrlx":1106.0,"ctrly":596.0,"x2":718.0,"y2":588.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[778,791,793],"ypoints":[586,577,590]},"namePoint":{"x":1039,"y":473},"nameBounds":{"x":1019,"y":453,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":718,"y":114,"width":510,"height":482},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1228,"y":114},"type":"TAD","name":"Harbor*","selected":false,"bounds":{"x":1168,"y":54,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1386,"y":372},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1326,"y":312,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1229,"y":129},"type":"TAD","name":"Harbor","selected":false,"bounds":{"x":1169,"y":69,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1372,"y":365},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1312,"y":305,"width":120,"height":120},"holdName":true},"functions":"char SiCharAvail(void);\n//Post: returns the number of available characters that are in the reception queue.\n//Retorna -1 if there are no available characters.\n\nchar SiGetChar(void);\n//Pre: SiCharAvail() returns a number greater than zero.\n//Post: returns and removes the first element from the reception queue.\n\nchar SiIsAvailable(void);\n//Post: returns 1 if the SIO module is available for sending.\n\nvoid SiSendChar(char c);\n//Pre: SiIsAvailable().\n//Post: starts sending the specified character.\n\n","pivotPoint":{"x":1374,"y":230},"pivot":{"x":1367,"y":223,"width":15,"height":15},"curve":{"x1":1228.0,"y1":114.0,"ctrlx":1374.0,"ctrly":230.0,"x2":1386.0,"y2":372.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1375,1363,1376],"ypoints":[313,301,296]},"namePoint":{"x":1340,"y":236},"nameBounds":{"x":1320,"y":216,"width":40,"height":40},"name":"6","selected":false,"bounds":{"x":1228,"y":114,"width":158,"height":258},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1386,"y":372},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1326,"y":312,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1293,"y":606},"type":"TAD","name":"PlayRecord","selected":false,"bounds":{"x":1233,"y":546,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1372,"y":365},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1312,"y":305,"width":120,"height":120},"holdName":true},"functions":"char SiCharAvail(void);\n//Post: returns the number of available characters that are in the reception queue.\n//Retorna -1 if there are no available characters.\n\nchar SiGetChar(void);\n//Pre: SiCharAvail() returns a number greater than zero.\n//Post: returns and removes the first element from the reception queue.\n\nchar SiIsAvailable(void);\n//Post: returns 1 if the SIO module is available for sending.\n\nvoid SiSendChar(char c);\n//Pre: SiIsAvailable().\n//Post: starts sending the specified character.\n\n","pivotPoint":{"x":1342,"y":483},"pivot":{"x":1335,"y":476,"width":15,"height":15},"curve":{"x1":1293.0,"y1":607.0,"ctrlx":1342.0,"ctrly":483.0,"x2":1386.0,"y2":372.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1363,1364,1351],"ypoints":[428,444,439]},"namePoint":{"x":1340,"y":486},"nameBounds":{"x":1320,"y":466,"width":40,"height":40},"name":"6","selected":false,"bounds":{"x":1293,"y":372,"width":93,"height":235},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":359},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1003,"y":299,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1293,"y":606},"type":"TAD","name":"PlayRecord","selected":false,"bounds":{"x":1233,"y":546,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1270,"y":415},"pivot":{"x":1263,"y":408,"width":15,"height":15},"curve":{"x1":1063.0,"y1":359.0,"ctrlx":1270.0,"ctrly":415.0,"x2":1293.0,"y2":607.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1280,1268,1281],"ypoints":[547,535,530]},"namePoint":{"x":1197,"y":426},"nameBounds":{"x":1177,"y":406,"width":40,"height":40},"name":"4","selected":false,"bounds":{"x":1063,"y":359,"width":230,"height":248},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":569},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1003,"y":509,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1386,"y":372},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1326,"y":312,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1072,"y":574},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1012,"y":514,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1372,"y":365},"type":"TAD","name":"SIO","selected":false,"bounds":{"x":1312,"y":305,"width":120,"height":120},"holdName":true},"functions":"char SiCharAvail(void);\n//Post: returns the number of available characters that are in the reception queue.\n//Retorna -1 if there are no available characters.\n\nchar SiGetChar(void);\n//Pre: SiCharAvail() returns a number greater than zero.\n//Post: returns and removes the first element from the reception queue.\n\nchar SiIsAvailable(void);\n//Post: returns 1 if the SIO module is available for sending.\n\nvoid SiSendChar(char c);\n//Pre: SiIsAvailable().\n//Post: starts sending the specified character.\n\n","pivotPoint":{"x":1135,"y":588},"pivot":{"x":1128,"y":581,"width":15,"height":15},"curve":{"x1":1063.0,"y1":569.0,"ctrlx":1135.0,"ctrly":588.0,"x2":1386.0,"y2":372.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1339,1331,1322],"ypoints":[410,424,414]},"namePoint":{"x":1179,"y":529},"nameBounds":{"x":1159,"y":509,"width":40,"height":40},"name":"6","selected":false,"bounds":{"x":1063,"y":372,"width":323,"height":216},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":569},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1003,"y":509,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1551,"y":776},"type":"TAD","name":"RecordList*","selected":false,"bounds":{"x":1491,"y":716,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1072,"y":574},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1012,"y":514,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1547,"y":761},"type":"TAD","name":"RecordList","selected":false,"bounds":{"x":1487,"y":701,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1131,"y":897},"pivot":{"x":1124,"y":890,"width":15,"height":15},"curve":{"x1":1063.0,"y1":569.0,"ctrlx":1131.0,"ctrly":897.0,"x2":1551.0,"y2":776.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1489,1475,1472],"ypoints":[791,800,787]},"namePoint":{"x":1219,"y":784},"nameBounds":{"x":1199,"y":764,"width":40,"height":40},"name":"7","selected":false,"bounds":{"x":1063,"y":569,"width":488,"height":328},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1551,"y":776},"type":"TAD","name":"RecordList*","selected":false,"bounds":{"x":1491,"y":716,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1293,"y":606},"type":"TAD","name":"PlayRecord","selected":false,"bounds":{"x":1233,"y":546,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1547,"y":761},"type":"TAD","name":"RecordList","selected":false,"bounds":{"x":1487,"y":701,"width":120,"height":120},"holdName":true},"functions":"","pivotPoint":{"x":1410,"y":676},"pivot":{"x":1403,"y":669,"width":15,"height":15},"curve":{"x1":1293.0,"y1":607.0,"ctrlx":1410.0,"ctrly":676.0,"x2":1551.0,"y2":776.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1502,1485,1493],"ypoints":[741,738,727]},"namePoint":{"x":1416,"y":683},"nameBounds":{"x":1396,"y":663,"width":40,"height":40},"name":"7","selected":false,"bounds":{"x":1293,"y":607,"width":258,"height":169},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":712,"y":150},"type":"TAD","name":"CurrentTime*","selected":false,"bounds":{"x":652,"y":90,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":742,"y":96},"type":"TAD","name":"CurrentTime","selected":false,"bounds":{"x":682,"y":36,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":719,"y":588},"type":"TAD","name":"LCD","selected":true,"bounds":{"x":659,"y":528,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":-3,"y":569},"pivot":{"x":-10,"y":562,"width":15,"height":15},"curve":{"x1":712.0,"y1":150.0,"ctrlx":-3.0,"ctrly":569.0,"x2":718.0,"y2":588.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[656,640,641],"ypoints":[585,590,576]},"namePoint":{"x":356,"y":469},"nameBounds":{"x":336,"y":449,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":-3,"y":150,"width":721,"height":438},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":569},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1003,"y":509,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":223,"y":596},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":163,"y":536,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1072,"y":574},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1012,"y":514,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":265,"y":641},"type":"TAD","name":"Melody","selected":false,"bounds":{"x":205,"y":581,"width":120,"height":120},"holdName":true},"functions":"void playNote(char noteNum);\n//Pre: 0 \u003c\u003d noteNum \u003c\u003d 12\n//Post: Play a note 300ms\n\nvoid playMelody(void);\n//Pre: -\n//Post: Plays the full 8 seconds melody\n\n","pivotPoint":{"x":1081,"y":830},"pivot":{"x":1074,"y":823,"width":15,"height":15},"curve":{"x1":1063.0,"y1":569.0,"ctrlx":1081.0,"ctrly":830.0,"x2":223.0,"y2":596.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[290,306,302],"ypoints":[613,610,623]},"namePoint":{"x":862,"y":706},"nameBounds":{"x":842,"y":686,"width":40,"height":40},"name":"8","selected":false,"bounds":{"x":223,"y":569,"width":858,"height":261},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":223,"y":596},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":163,"y":536,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":283,"y":583},"type":"TAD","name":"Melody","selected":false,"bounds":{"x":223,"y":523,"width":120,"height":120},"holdName":true},"functions":"void playNote(char noteNum);\n//Pre: 0 \u003c\u003d noteNum \u003c\u003d 12\n//Post: Play a note 300ms\n\nvoid playMelody(void);\n//Pre: -\n//Post: Plays the full 8 seconds melody\n\n","pivotPoint":{"x":769,"y":1009},"pivot":{"x":762,"y":1002,"width":15,"height":15},"curve":{"x1":1293.0,"y1":607.0,"ctrlx":769.0,"ctrly":1009.0,"x2":223.0,"y2":596.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[272,288,280],"ypoints":[631,633,645]},"namePoint":{"x":763,"y":805},"nameBounds":{"x":743,"y":785,"width":40,"height":40},"name":"8","selected":false,"bounds":{"x":223,"y":596,"width":1070,"height":413},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":600,"y":889},"pivot":{"x":593,"y":882,"width":15,"height":15},"curve":{"x1":1293.0,"y1":607.0,"ctrlx":600.0,"ctrly":889.0,"x2":718.0,"y2":588.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[701,708,694],"ypoints":[647,662,662]},"namePoint":{"x":802,"y":743},"nameBounds":{"x":782,"y":723,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":600,"y":588,"width":693,"height":301},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":569},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1003,"y":509,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1072,"y":574},"type":"TAD","name":"Record","selected":false,"bounds":{"x":1012,"y":514,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"functions":"void LcInit(char rows, char columns);\n// Pre: Rows \u003d {1, 2, 4}  Columns \u003d {8, 16, 20, 24, 32, 40 }\n// Pre: There is a free timer\n// Pre: It needs 40ms of tranquility between the VCC raising and this constructor being called.\n// Post: This routine can last up to 100ms\n// Post: The display remains cleared, the cursor turned off and at the position 0, 0.\n\nvoid LcEnd(void);\n// The destructor\n\nvoid LcClear(void);\n// Post: Clears the display and sets the cursor to its previous state. \n// Post: The next order can last up to 1.6ms. \n\nvoid LcCursorOn(void);\n// Post: Turn on the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcCursorOff(void);\n// Post: Turns off the cursor\n// Post: The next order can last up to 40us. \n\nvoid LcGotoXY(char Column, char Row);\n// Pre : Column between 0 and 39, row between 0 and 3. \n// Post: Sets the cursor to those coordinates. \n// Post: The next order can last up to 40us. \n\nvoid LcPutChar(char c);\n// Post: Paints the char in the actual cursor position and increments \n// its position. If the column gets to 39 it returns to 0.\n// The row of the LCD is increased when this happens until the second\n// row and then it is reset back to row 0 if it has 2 rows total. \n// If the LCD has 4 rows it will reset back to row 0 when it\n// reaches row 4 and the columns will go till 39 before reseting to 0.\n// The one row LCDs returns to 0 when a column gets to 39. \n// The row is never increased. \n\t// The char is written\n\nvoid LcPutString(char *s);\n// Post: Paints the string from the actual cursor position. \n// The coordinate criteria is the same as the LcPutChar. \n// Post: Can last up to 40us per char of a routine output.","pivotPoint":{"x":821,"y":652},"pivot":{"x":814,"y":645,"width":15,"height":15},"curve":{"x1":1063.0,"y1":569.0,"ctrlx":821.0,"ctrly":652.0,"x2":718.0,"y2":588.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[775,790,788],"ypoints":[610,605,619]},"namePoint":{"x":875,"y":614},"nameBounds":{"x":855,"y":594,"width":40,"height":40},"name":"2","selected":false,"bounds":{"x":718,"y":569,"width":345,"height":83},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":768,"y":355},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":708,"y":295,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":718,"y":588},"type":"TAD","name":"LCD*","selected":false,"bounds":{"x":658,"y":528,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":765,"y":350},"type":"TAD","name":"Timer","selected":false,"bounds":{"x":705,"y":290,"width":120,"height":120},"holdName":true},"functions":"char TiGetTimer (void);\n//Pre: there are still available timers.\n//Post: returns a \u0027Handle\u0027 to be able to use the functions TiGetTics() and TiResetTics().\n//Retorns -1 if there are no available timers.\n\nunsigned int TiGetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: returns the milliseconds that have passed since the last call to TiGetTics() for this \u0027handle\u0027.\n\nvoid TiResetTics (unsigned char Handle);\n//Pre: \u0027Handle\u0027 was obtained from calling TiGetTimer.\n//Post: turns on the timer associated for \u0027Handle\u0027 and takes the temporal reference of the system.\n\n","pivotPoint":{"x":672,"y":455},"pivot":{"x":665,"y":448,"width":15,"height":15},"curve":{"x1":718.0,"y1":588.0,"ctrlx":672.0,"ctrly":455.0,"x2":768.0,"y2":355.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[730,728,716],"ypoints":[403,419,412]},"namePoint":{"x":707,"y":463},"nameBounds":{"x":687,"y":443,"width":40,"height":40},"name":"0","selected":false,"bounds":{"x":672,"y":355,"width":96,"height":233},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":965,"y":127},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":905,"y":67,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":223,"y":596},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":163,"y":536,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":969,"y":142},"type":"TAD","name":"Keypad*","selected":false,"bounds":{"x":909,"y":82,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":223,"y":596},"type":"TAD","name":"Melody*","selected":false,"bounds":{"x":163,"y":536,"width":120,"height":120},"holdName":true},"functions":"void playNote(char noteNum);\n//Pre: 0 \u003c\u003d noteNum \u003c\u003d 12\n//Post: Play a note 300ms\n\nvoid playMelody(void);\n//Pre: -\n//Post: Plays the full 8 seconds melody\n\n","pivotPoint":{"x":374,"y":-95},"pivot":{"x":367,"y":-102,"width":15,"height":15},"curve":{"x1":965.0,"y1":127.0,"ctrlx":374.0,"ctrly":-95.0,"x2":223.0,"y2":596.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[237,234,247],"ypoints":[535,518,522]},"namePoint":{"x":484,"y":133},"nameBounds":{"x":464,"y":113,"width":40,"height":40},"name":"8","selected":false,"bounds":{"x":223,"y":-95,"width":742,"height":691},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":359},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1003,"y":299,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1074,"y":373},"type":"TAD","name":"Menu*","selected":false,"bounds":{"x":1014,"y":313,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1544,"y":305},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1484,"y":245,"width":120,"height":120},"holdName":true},"functions":"char getGoDown(void);\n//Pre: -\n//Post: Returns 1 if the screen needs to go down \n//(AND PUTS 0 THE VARIABLE), 0 if not\n\nchar getGoUp(void);\n//Pre: -\n//Post: Returns 1 if the screen needs to go up \n//(AND PUTS 0 THE VARIABLE), 0 if not\n\nvoid resetMoves(void);\n//Pre: -\n//Post: Puts 0 in go_up and go_down variables \n\n\n\n\n\n\n\n","pivotPoint":{"x":1283,"y":216},"pivot":{"x":1276,"y":209,"width":15,"height":15},"curve":{"x1":1063.0,"y1":359.0,"ctrlx":1283.0,"ctrly":216.0,"x2":1548.0,"y2":339.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1492,1475,1480],"ypoints":[316,317,304]},"namePoint":{"x":1294,"y":282},"nameBounds":{"x":1274,"y":262,"width":40,"height":40},"name":"11","selected":false,"bounds":{"x":1063,"y":216,"width":485,"height":143},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1293,"y":607},"type":"TAD","name":"PlayRecord*","selected":false,"bounds":{"x":1233,"y":547,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1544,"y":305},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1484,"y":245,"width":120,"height":120},"holdName":true},"functions":"char getGoDown(void);\n//Pre: -\n//Post: Returns 1 if the screen needs to go down \n//(AND PUTS 0 THE VARIABLE), 0 if not\n\nchar getGoUp(void);\n//Pre: -\n//Post: Returns 1 if the screen needs to go up \n//(AND PUTS 0 THE VARIABLE), 0 if not\n\nvoid resetMoves(void);\n//Pre: -\n//Post: Puts 0 in go_up and go_down variables \n\n\n\n\n\n\n\n","pivotPoint":{"x":1641,"y":548},"pivot":{"x":1634,"y":541,"width":15,"height":15},"curve":{"x1":1293.0,"y1":607.0,"ctrlx":1641.0,"ctrly":548.0,"x2":1548.0,"y2":339.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1565,1573,1559],"ypoints":[398,412,413]},"namePoint":{"x":1530,"y":510},"nameBounds":{"x":1510,"y":490,"width":40,"height":40},"name":"11","selected":false,"bounds":{"x":1293,"y":339,"width":348,"height":268},"holdName":true},{"type":"INTERFACE","n1":{"center":{"x":1063,"y":569},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1003,"y":509,"width":120,"height":120},"holdName":true},"n2":{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},"originalN1":{"center":{"x":1063,"y":569},"type":"TAD","name":"Record*","selected":false,"bounds":{"x":1003,"y":509,"width":120,"height":120},"holdName":true},"originalN2":{"center":{"x":1548,"y":339},"type":"TAD","name":"Joystick*","selected":false,"bounds":{"x":1488,"y":279,"width":120,"height":120},"holdName":true},"functions":"void disableJoystick(void);\n//Pre: -\n//Post: Disables the joystick flow and changes to CH\u003d1\n\nvoid enableJoystick(void);\n//Pre: -\n//Post: Enables the joystick flow and changes to CH\u003d0\n","pivotPoint":{"x":2099,"y":792},"pivot":{"x":2092,"y":785,"width":15,"height":15},"curve":{"x1":1063.0,"y1":569.0,"ctrlx":2099.0,"ctrly":792.0,"x2":1548.0,"y2":339.0},"bidir":false,"arrow":{"npoints":3,"xpoints":[1594,1609,1600],"ypoints":[378,382,393]},"namePoint":{"x":1702,"y":623},"nameBounds":{"x":1682,"y":603,"width":40,"height":40},"name":"12","selected":false,"bounds":{"x":1063,"y":339,"width":1036,"height":453},"holdName":false}],"actions":[],"stateCount":0,"interfaceCount":13}